{"version":3,"sources":["utils/web3.ts","contexts/Localisation/translationsContext.ts","state/fetchBNBPrice.ts","state/hooks.ts","state/farms/fetchFarms.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","components/layout/Container.tsx","components/layout/Page.tsx","utils/getRpcUrl.ts","contexts/RefreshContext.tsx","state/actions.ts","hooks/useRefresh.ts","utils/translateTextHelpers.ts","hooks/useI18n.ts","config/constants/types.ts","utils/multicall.ts","utils/addressHelpers.ts","config/constants/contracts.ts","config/constants/pools.ts","state/pools/fetchPoolsUser.ts","state/pools/index.ts","config/constants/farms.ts","views/Home/components/TwitterCard.tsx","views/Home/components/CustomPage.tsx","views/Exchange/Exchange.tsx","style/Global.tsx","config/localisation/languageCodes.ts","contexts/Localisation/languageContext.tsx","contexts/ThemeContext.tsx","hooks/useTheme.ts","components/Menu/config.ts","components/Menu/index.tsx","components/PageLoader.tsx","App.tsx","contexts/BlockContext.tsx","state/index.ts","Providers.tsx","index.tsx"],"names":["RPC_URL","getRpcUrl","httpProvider","Web3","providers","HttpProvider","timeout","getWeb3","getContract","abi","address","contractOptions","eth","Contract","defaultTranslationState","translations","setTranslations","TranslationsContext","createContext","useGetBNBPriceData","useState","BigNumber","data","setData","useEffect","a","axios","get","resp","console","log","price","fetchData","ZERO","useFetchPublicData","dispatch","useDispatch","slowRefresh","useRefresh","fetchFarmsPublicDataAsync","useFarms","useSelector","state","farms","useFarmFromPid","pid","find","f","useFarmUser","farm","allowance","userData","tokenBalance","stakedBalance","earnings","usePriceBnbBusd","usePriceCakeBusd","bnbPriceUSD","tokenPriceVsQuote","times","usePriceMuftBusd","useTotalValue","bnbPrice","cakePrice","value","i","length","lpTotalInQuoteToken","val","quoteTokenSymbol","QuoteToken","BNB","CAKE","plus","CHAIN_ID","process","fetchFarms","Promise","all","farmsConfig","map","farmConfig","lpAdress","lpAddresses","calls","tokenAddresses","name","params","quoteTokenAdresses","isTokenOnly","getMasterChefAddress","multicall","erc20","tokenBalanceLP","quoteTokenBlanceLP","lpTokenBalanceMC","lpTotalSupply","tokenDecimals","quoteTokenDecimals","tokenAmount","div","pow","tokenSymbol","BUSD","lpTokenRatio","quoteTokenAmount","comparedTo","masterchefABI","info","totalAllocPoint","MuftPerBlock","allocPoint","_hex","poolWeight","toJSON","toNumber","multiplier","toString","depositFeeBP","fetchFarmUserAllowances","account","masterChefAdress","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","fetchFarmUserEarnings","rawEarnings","parsedEarnings","initialState","farmsSlice","createSlice","reducers","setFarmsPublicData","action","liveFarmsData","payload","liveFarmData","setFarmUserData","arrayOfUserDataObjects","forEach","userDataEl","index","actions","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","Container","styled","theme","mediaQueries","sm","Page","lg","nodes","getNodeUrl","randomIndex","random","RefreshContext","React","slow","fast","RefreshContextProvider","children","setSlow","setFast","interval","setInterval","prev","clearInterval","Provider","useContext","fastRefresh","variableRegex","getTranslation","translationId","fallback","foundTranslation","translation","stringId","translatedString","text","includes","stringToReplace","exec","fallbackValueAtIndex","split","replace","replaceDynamicString","useI18n","PoolCategory","web3","multi","MultiCallAbi","getMulticallAddress","itf","Interface","calldata","call","toLowerCase","encodeFunctionData","methods","aggregate","returnData","res","decodeFunctionResult","getCakeAddress","addresses","cake","chainId","masterChef","mulltiCall","getWbnbAddress","wbnb","getLotteryAddress","lottery","getLotteryTicketAddress","lotteryNFT","busd","pools","nonBnbPools","poolsConfig","filter","p","stakingTokenName","bnbPools","nonMasterPools","sousId","masterChefContract","masterChefABI","fetchPoolsAllowance","stakingTokenAddress","contractAddress","allowances","reduce","acc","pool","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","sousChefABI","userInfo","stakedBalances","amount","masterPoolAmount","fetchUserPendingRewards","pendingRewards","pendingMSWAP","pendingReward","PoolsSlice","setPoolsPublicData","livePoolsData","livePoolData","entry","setPoolsUserData","userPoolData","updatePoolsUserData","field","findIndex","fetchPoolsUserDataAsync","stakingTokenBalances","stakingTokenBalance","updateUserAllowance","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","risk","lpSymbol","contracts","StyledTwitterCard","Card","Div","TwitterCard","TranslateString","style","padding","display","flexDirection","alignItems","size","textAlign","dataSource","sourceType","screenName","options","height","chrome","width","StyledCustomPage","section","MainImage","IconContainer","Icon","routeToURL","url","window","location","CustomPage","onClick","src","alt","Exchnage","GlobalStyle","createGlobalStyle","colors","background","EN","code","language","allLanguages","CACHE_KEY","LanguageContext","selectedLanguage","setSelectedLanguage","translatedLanguage","setTranslatedLanguage","LanguageContextProvider","parseInt","REACT_APP_CROWDIN_PROJECTID","StringTranslations","token","REACT_APP_CROWDIN_APIKEY","storedLangCode","localStorage","getItem","storedLang","getStoredLang","fetch","then","r","json","translationApiResponse","catch","e","error","langObject","setItem","ThemeContext","isDark","toggleTheme","ThemeContextProvider","isDarkUserSetting","JSON","parse","setIsDark","prevState","stringify","dark","light","useTheme","StyledThemeCopntext","config","label","icon","href","items","Menu","props","useWallet","connect","reset","cakePriceUsd","cake2PriceUsd","login","logout","currentLang","langs","setLang","links","priceLink","Wrapper","PageLoader","Home","lazy","Farms","NotFound","EXPONENTIAL_AT","DECIMAL_PLACES","App","Global","path","exact","tokenMode","Exchange","component","memo","BlockContext","BlockContextProvider","previousBlock","useRef","block","setBlock","getBlockNumber","blockNumber","current","configureStore","devTools","reducer","farmsReducer","poolsReducer","Providers","rpcUrl","store","connectors","walletconnect","bsc","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wHAAA,mGAMMA,EAAUC,cACVC,EAAe,IAAIC,IAAKC,UAAUC,aAAaL,EAAS,CAAEM,QAAS,MAKnEC,EAAU,WAEd,OADa,IAAIJ,IAAKD,IAGlBM,EAAc,SAACC,EAAUC,EAAiBC,GAE9C,OAAO,IADMJ,IACGK,IAAIC,UAAUJ,EAA4BC,EAASC,K,iCClBrE,6CAOMG,EAA4C,CAChDC,aAAc,GACdC,gBAAiB,cAGNC,EAAsBC,wBAAcJ,I,yhHCgBlCK,EAtBY,WAAO,IAAD,EACPC,mBAAoB,IAAIC,IAAU,IAD3B,mBACxBC,EADwB,KAClBC,EADkB,KAmB/B,OAdAC,qBAAU,YACO,uCAAG,4BAAAC,EAAA,sEACGC,IAAMC,IALb,yFAII,OACVC,EADU,OAKhBC,QAAQC,IAAIF,EAAKN,KAAKA,KAAKS,MAAM,SAEjCR,EAAQ,IAAIF,IAAUO,EAAKN,KAAKA,KAAKS,QAPrB,2CAAH,qDAUfC,KACC,IAEIV,GChBHW,EAAO,IAAIZ,IAAU,GAEda,EAAqB,WAChC,IAAMC,EAAWC,cACTC,EAAgBC,cAAhBD,YACRb,qBAAU,WACRW,EAASI,iBAER,CAACJ,EAAUE,KAKHG,EAAW,WAEtB,OADcC,aAAY,SAACC,GAAD,OAAkBA,EAAMC,MAAMrB,SAI7CsB,EAAiB,SAACC,GAE7B,OADaJ,aAAY,SAACC,GAAD,OAAkBA,EAAMC,MAAMrB,KAAKwB,MAAK,SAACC,GAAD,OAAOA,EAAEF,MAAQA,SASvEG,EAAc,SAACH,GAC1B,IAAMI,EAAOL,EAAeC,GAE5B,MAAO,CACLK,UAAWD,EAAKE,SAAW,IAAI9B,IAAU4B,EAAKE,SAASD,WAAa,IAAI7B,IAAU,GAClF+B,aAAcH,EAAKE,SAAW,IAAI9B,IAAU4B,EAAKE,SAASC,cAAgB,IAAI/B,IAAU,GACxFgC,cAAeJ,EAAKE,SAAW,IAAI9B,IAAU4B,EAAKE,SAASE,eAAiB,IAAIhC,IAAU,GAC1FiC,SAAUL,EAAKE,SAAW,IAAI9B,IAAU4B,EAAKE,SAASG,UAAY,IAAIjC,IAAU,KA2BvEkC,EAAkB,WAK7B,OADcpC,KAOHqC,EAAmB,WAC9B,IACMC,EAAcF,IACdN,EAAOL,EAFD,GAGZ,OAAOK,EAAKS,kBAAoBD,EAAYE,MAAMV,EAAKS,mBAAqBzB,GAqBjE2B,EAAmB,WAC9B,IACMH,EAAcF,IACdN,EAAOL,EAFD,GAGZ,OAAOK,EAAKS,kBAAoBD,EAAYE,MAAMV,EAAKS,mBAAqBzB,GAQjE4B,EAAgB,WAK3B,IAJA,IAAMlB,EAAQH,IACRsB,EAAWP,IACXQ,EAAYP,IACdQ,EAAQ,IAAI3C,IAAU,GACjB4C,EAAI,EAAGA,EAAItB,EAAMuB,OAAQD,IAAK,CACrC,IAAMhB,EAAON,EAAMsB,GACnB,GAAIhB,EAAKkB,oBAAqB,CAC5B,IAAIC,OAAG,EAELA,EADEnB,EAAKoB,mBAAqBC,IAAWC,IAChCT,EAASH,MAAMV,EAAKkB,qBAClBlB,EAAKoB,mBAAqBC,IAAWE,KACvCT,EAAUJ,MAAMV,EAAKkB,qBAErBlB,EAAKkB,oBAEdH,EAAQA,EAAMS,KAAKL,IAGvB,OAAOJ,I,mOClIHU,EAAWC,KA0HFC,EAxHC,uCAAG,4BAAAnD,EAAA,6DAEjBI,QAAQC,IAAI,WAAW4C,GAFN,SAGEG,QAAQC,IACzBC,IAAYC,IAAZ,uCAAgB,WAAOC,GAAP,yDAAAxD,EAAA,6DACRyD,EAAWD,EAAWE,YAAYT,IAClCU,EAAQ,CAEZ,CACE1E,QAASuE,EAAWI,eAAeX,IACnCY,KAAM,YACNC,OAAQ,CAACL,IAGX,CACExE,QAASuE,EAAWO,mBAAmBd,IACvCY,KAAM,YACNC,OAAQ,CAACL,IAGX,CACExE,QAASuE,EAAWQ,YAAcR,EAAWI,eAAeX,IAAYQ,EACxEI,KAAM,YACNC,OAAQ,CAACG,gBAGX,CACEhF,QAASwE,EACTI,KAAM,eAGR,CACE5E,QAASuE,EAAWI,eAAeX,IACnCY,KAAM,YAGR,CACE5E,QAASuE,EAAWO,mBAAmBd,IACvCY,KAAM,aAlCI,SA6CJK,YAAUC,EAAOR,GA7Cb,0CAuCZS,EAvCY,KAwCZC,EAxCY,KAyCZC,EAzCY,KA0CZC,EA1CY,KA2CZC,EA3CY,KA4CZC,EA5CY,KAkDXjB,EAAWQ,aACZU,EAAc,IAAI9E,IAAU0E,GAAkBK,IAAI,IAAI/E,IAAU,IAAIgF,IAAIJ,IAEtEvC,EADCuB,EAAWqB,cAAgBhC,IAAWiC,MAAQtB,EAAWZ,mBAAqBC,IAAWiC,KACtE,IAAIlF,IAAU,GAEd,IAAIA,IAAUyE,GAAoBM,IAAI,IAAI/E,IAAUwE,IAE1E1B,EAAsBgC,EAAYxC,MAAMD,KAGlC8C,EAAe,IAAInF,IAAU0E,GAAkBK,IAAI,IAAI/E,IAAU2E,IAGvE7B,EAAsB,IAAI9C,IAAUyE,GACjCM,IAAI,IAAI/E,IAAU,IAAIgF,IAAI,KAC1B1C,MAAM,IAAItC,IAAU,IACpBsC,MAAM6C,GAGTL,EAAc,IAAI9E,IAAUwE,GAAgBO,IAAI,IAAI/E,IAAU,IAAIgF,IAAIJ,IAAgBtC,MAAM6C,GACtFC,EAAmB,IAAIpF,IAAUyE,GACpCM,IAAI,IAAI/E,IAAU,IAAIgF,IAAIH,IAC1BvC,MAAM6C,GAGP9C,EADCyC,EAAYO,WAAW,GAAK,EACTD,EAAiBL,IAAID,GAErB,IAAI9E,IAAUyE,GAAoBM,IAAI,IAAI/E,IAAUwE,KA7E9D,UAiFsCF,YAAUgB,EAAe,CAC3E,CACEjG,QAASgF,cACTJ,KAAM,WACNC,OAAQ,CAACN,EAAWpC,MAEtB,CACEnC,QAASgF,cACTJ,KAAM,mBAER,CACE5E,QAASgF,cACTJ,KAAM,mBA7FI,2CAiFPsB,EAjFO,KAiFDC,EAjFC,KAiFgBC,EAjFhB,KAiGRC,EAAa,IAAI1F,IAAUuF,EAAKG,WAAWC,MAC3CC,EAAaF,EAAWX,IAAI,IAAI/E,IAAUwF,IAlGlC,6CAqGT5B,GArGS,IAsGZkB,YAAaA,EAAYe,SAEzB/C,oBAAqBA,EAAoB+C,SACzCxD,kBAAmBA,EAAkBwD,SACrCD,WAAYA,EAAWE,WACvBC,WAAW,GAAD,OAAKL,EAAWX,IAAI,KAAKiB,WAAzB,KACVC,aAAcV,EAAKU,aACnBR,aAAc,IAAIzF,IAAUyF,GAAcK,cA7G9B,4CAAhB,wDAJe,cAGX7F,EAHW,yBAqHVA,GArHU,2CAAH,qDCDHiG,EAAuB,uCAAG,WAAOC,GAAP,qBAAA/F,EAAA,6DAC/BgG,EAAmB/B,cAEnBN,EAAQL,IAAYC,KAAI,SAAC/B,GAE7B,MAAO,CAAEvC,QADiBuC,EAAKwC,YAAcxC,EAAKoC,eAAeX,IAAYzB,EAAKkC,YAAYT,IACzDY,KAAM,YAAaC,OAAQ,CAACiC,EAASC,OALvC,SAQP9B,YAAU+B,EAAUtC,GARb,cAQ/BuC,EAR+B,OAS/BC,EAAqBD,EAAgB3C,KAAI,SAAC6C,GAC9C,OAAO,IAAIxG,IAAUwG,GAAWX,YAVG,kBAY9BU,GAZ8B,2CAAH,sDAevBE,EAA0B,uCAAG,WAAON,GAAP,mBAAA/F,EAAA,6DAClC2D,EAAQL,IAAYC,KAAI,SAAC/B,GAE7B,MAAO,CACLvC,QAFwBuC,EAAKwC,YAAcxC,EAAKoC,eAAeX,IAAYzB,EAAKkC,YAAYT,IAG5FY,KAAM,YACNC,OAAQ,CAACiC,OAN2B,SAUT7B,YAAU+B,EAAUtC,GAVX,cAUlC2C,EAVkC,OAWlCC,EAAsBD,EAAiB/C,KAAI,SAAC5B,GAChD,OAAO,IAAI/B,IAAU+B,GAAc8D,YAZG,kBAcjCc,GAdiC,2CAAH,sDAiB1BC,EAA2B,uCAAG,WAAOT,GAAP,qBAAA/F,EAAA,6DACnCgG,EAAmB/B,cAEnBN,EAAQL,IAAYC,KAAI,SAAC/B,GAC7B,MAAO,CACLvC,QAAS+G,EACTnC,KAAM,WACNC,OAAQ,CAACtC,EAAKJ,IAAK2E,OAPkB,SAWT7B,YAAUgB,EAAevB,GAXhB,cAWnC8C,EAXmC,OAYnCC,EAAuBD,EAAkBlD,KAAI,SAAC3B,GAClD,OAAO,IAAIhC,IAAUgC,EAAc,GAAG2D,MAAME,YAbL,kBAelCiB,GAfkC,2CAAH,sDAkB3BC,EAAqB,uCAAG,WAAOZ,GAAP,qBAAA/F,EAAA,6DAC7BgG,EAAmB/B,cAEnBN,EAAQL,IAAYC,KAAI,SAAC/B,GAC7B,MAAO,CACLvC,QAAS+G,EACTnC,KAAM,eACNC,OAAQ,CAACtC,EAAKJ,IAAK2E,OAPY,SAWT7B,YAAUgB,EAAevB,GAXhB,cAW7BiD,EAX6B,OAY7BC,EAAiBD,EAAYrD,KAAI,SAAC1B,GACtC,OAAO,IAAIjC,IAAUiC,GAAU4D,YAbE,kBAe5BoB,GAf4B,2CAAH,sDC/C5BC,EAA2B,CAAEjH,KAAK,YAAKyD,MAEhCyD,EAAaC,YAAY,CACpCnD,KAAM,QACNiD,eACAG,SAAU,CACRC,mBAAoB,SAACjG,EAAOkG,GAC1B,IAAMC,EAAwBD,EAAOE,QACrCpG,EAAMpB,KAAOoB,EAAMpB,KAAK0D,KAAI,SAAC/B,GAC3B,IAAM8F,EAAeF,EAAc/F,MAAK,SAACC,GAAD,OAAOA,EAAEF,MAAQI,EAAKJ,OAC9D,OAAO,2BAAKI,GAAS8F,OAGzBC,gBAAiB,SAACtG,EAAOkG,GACYA,EAAOE,QAAlCG,uBACeC,SAAQ,SAACC,GAAgB,IACtCC,EAAUD,EAAVC,MACR1G,EAAMpB,KAAK8H,GAAX,2BAAyB1G,EAAMpB,KAAK8H,IAApC,IAA4CjG,SAAUgG,W,EAOPX,EAAWa,QAAnDV,E,EAAAA,mBAAoBK,E,EAAAA,gBAGtBzG,EAA4B,yDAAM,WAAOJ,GAAP,eAAAV,EAAA,sEACzBmD,IADyB,OACvCjC,EADuC,OAE7CR,EAASwG,EAAmBhG,IAFiB,2CAAN,uDAI5B2G,EAAyB,SAAC9B,GAAD,8CAAa,WAAOrF,GAAP,uBAAAV,EAAA,sEAChB8F,EAAwBC,GADR,cAC3C+B,EAD2C,gBAEbzB,EAA2BN,GAFd,cAE3CgC,EAF2C,gBAGhBvB,EAA4BT,GAHZ,cAG3CiC,EAH2C,iBAIlBrB,EAAsBZ,GAJJ,QAI3CkC,EAJ2C,OAM3CT,EAAyBM,EAAmBvE,KAAI,SAAC2E,EAAeP,GACpE,MAAO,CACLA,QACAlG,UAAWqG,EAAmBH,GAC9BhG,aAAcoG,EAAsBJ,GACpC/F,cAAeoG,EAAmBL,GAClC9F,SAAUoG,EAAiBN,OAI/BjH,EAAS6G,EAAgB,CAAEC,4BAhBsB,4CAAb,uDAmBvBT,MAAf,S,gTC5DA,IAaeoB,EAbGC,IAAOzD,IAAV,KAOX,qBAAG0D,MAAkBC,aAAaC,M,+RCNtC,IAAMC,EAAOJ,YAAOD,EAAPC,CAAH,KAKN,qBAAGC,MAAkBC,aAAaC,MAKlC,qBAAGF,MAAkBC,aAAaG,MAMvBD,O,iCCnBf,sBAGME,EAAQ,CAACxF,mCAA8BA,mCAA8BA,oCAO5DyF,IALI,WACjB,IAAMC,EAAcC,IAAO,EAAGH,EAAMjG,OAAS,GAC7C,OAAOiG,EAAME,K,gKCFTE,EAAiBC,IAAMtJ,cAAc,CAAEuJ,KAAM,EAAGC,KAAM,IAGtDC,EAAyB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACvBxJ,mBAAS,GADc,mBACxCqJ,EADwC,KAClCI,EADkC,OAEvBzJ,mBAAS,GAFc,mBAExCsJ,EAFwC,KAElCI,EAFkC,KAkB/C,OAdAtJ,qBAAU,WACR,IAAMuJ,EAAWC,YAAW,sBAAC,sBAAAvJ,EAAA,sDAC3BqJ,GAAQ,SAACG,GAAD,OAAUA,EAAO,KADE,2CAXX,KAclB,OAAO,kBAAMC,cAAcH,MAC1B,IAEHvJ,qBAAU,WACR,IAAMuJ,EAAWC,YAAW,sBAAC,sBAAAvJ,EAAA,sDAC3BoJ,GAAQ,SAACI,GAAD,OAAUA,EAAO,KADE,2CAjBX,KAoBlB,OAAO,kBAAMC,cAAcH,MAC1B,IAEI,cAACR,EAAeY,SAAhB,CAAyBnH,MAAO,CAAEyG,OAAMC,QAAxC,SAAiDE,M,iCC1B1D,sR,iCCAA,oBAQetI,IALI,WAAO,IAAD,EACA8I,qBAAWb,KAClC,MAAO,CAAEc,YAFc,EACfX,KACoBrI,YAFL,EACToI,Q,qDCDVa,EAAgB,UASTC,EAAiB,SAACxK,EAA0ByK,EAAuBC,GAC9E,IAAMC,EAAmB3K,EAAa+B,MAAK,SAAC6I,GAC1C,OAAOA,EAAYrK,KAAKsK,WAAaJ,KAEvC,GAAIE,EAAkB,CACpB,IAAMG,EAAmBH,EAAiBpK,KAAKwK,KAE/C,OADyBD,EAAiBE,SAAS,KAb1B,SAACL,EAA0BD,GACtD,IAAMO,EAAkBV,EAAcW,KAAKP,GAAkB,GAEvDQ,EAAuBT,EAASU,MAAM,KAAK,GACjD,OAAOT,EAAiBU,QAAQJ,EAAiBE,GAWtCG,CAAqBR,EAAkBJ,GAEzCI,EAET,OAAOJ,GCNMa,IAdC,WAAO,IACbvL,EAAiBqK,qBAAWnK,KAA5BF,aAER,OAAO,SAACyK,EAAuBC,GAC7B,MAAwB,UAApB1K,EAAa,GACR0K,EAEL1K,EAAamD,OAAS,EACjBqH,EAAexK,EAAcyK,EAAeC,GAE9CA,K,gCCOJ,IAAKnH,EAUAiI,EAVZ,oE,SAAYjI,K,UAAAA,E,YAAAA,E,cAAAA,E,YAAAA,E,UAAAA,E,UAAAA,E,aAAAA,M,cAUAiI,K,sBAAAA,E,YAAAA,E,mBAAAA,M,02ICnBN5G,EAAS,uCAAG,WAAOlF,EAAY2E,GAAnB,2BAAA3D,EAAA,6DACV+K,EAAOjM,cACPkM,EAAQ,IAAID,EAAK5L,IAAIC,SAAU6L,EAAqCC,eACpEC,EAAM,IAAIC,IAAUpM,GAEpBqM,EAAW1H,EAAMJ,KAAI,SAAC+H,GAAD,MAAU,CAACA,EAAKrM,QAAQsM,cAAeJ,EAAIK,mBAAmBF,EAAKzH,KAAMyH,EAAKxH,YALzF,SAMakH,EAAMS,QAAQC,UAAUL,GAAUC,OAN/C,uBAMRK,EANQ,EAMRA,WACFC,EAAMD,EAAWpI,KAAI,SAAC+H,EAAM9I,GAAP,OAAa2I,EAAIU,qBAAqBlI,EAAMnB,GAAGqB,KAAMyH,MAPhE,kBASTM,GATS,4CAAH,wDAYA1H,O,qxGCxBf,wNAIa4H,EAAiB,WAC5B,OAAOC,IAAUC,KAAKC,KAEXhI,EAAuB,WAClC,OAAO8H,IAAUG,WAAWD,KAEjBf,EAAsB,WACjC,OAAOa,IAAUI,WAAWF,KAEjBG,EAAiB,WAC5B,OAAOL,IAAUM,KAAKJ,KAEXK,EAAoB,WAC/B,OAAOP,IAAUQ,QAAQN,KAEdO,EAA0B,WACrC,OAAOT,IAAUU,WAAWR,M,wJCpBf,KACbD,KAAM,CACJ,GAAI,6CACJ,GAAI,8CAENE,WAAY,CACV,GAAI,6CACJ,GAAI,8CAENG,KAAM,CACJ,GAAI,6CACJ,GAAI,8CAENE,QAAS,CACP,GAAI,GACJ,GAAI,IAENE,WAAY,CACV,GAAI,GACJ,GAAI,IAENN,WAAY,CACV,GAAI,6CACJ,GAAI,8CAENO,KAAM,CACJ,GAAI,6CACJ,GAAI,gD,gHCYOC,IArCa,I,8hBCatBC,EAAcC,IAAYC,QAAO,SAACC,GAAD,OAAOA,EAAEC,mBAAqBnK,IAAWC,OAC1EmK,EAAWJ,IAAYC,QAAO,SAACC,GAAD,OAAOA,EAAEC,mBAAqBnK,IAAWC,OACvEoK,EAAiBL,IAAYC,QAAO,SAACC,GAAD,OAAoB,IAAbA,EAAEI,UAC7CpC,EAAOjM,cACPsO,EAAqB,IAAIrC,EAAK5L,IAAIC,SAAUiO,EAAsCpJ,eAE3EqJ,EAAmB,uCAAG,WAAOvH,GAAP,iBAAA/F,EAAA,6DAC3B2D,EAAQiJ,EAAYrJ,KAAI,SAACwJ,GAAD,MAAQ,CACpC9N,QAAS8N,EAAEQ,oBACX1J,KAAM,YACNC,OAAQ,CAACiC,EAASgH,EAAES,gBAAgBvK,SAJL,SAORiB,YAAU+B,EAAUtC,GAPZ,cAO3B8J,EAP2B,yBAQ1Bb,EAAYc,QACjB,SAACC,EAAKC,EAAMjG,GAAZ,mBAAC,eAA2BgG,GAA5B,kBAAkCC,EAAKT,OAAS,IAAIvN,IAAU6N,EAAW9F,IAAQlC,aACjF,KAV+B,2CAAH,sDAcnBoI,EAAiB,uCAAG,WAAO9H,GAAP,uBAAA/F,EAAA,6DAEzB2D,EAAQiJ,EAAYrJ,KAAI,SAACwJ,GAAD,MAAQ,CACpC9N,QAAS8N,EAAEQ,oBACX1J,KAAM,YACNC,OAAQ,CAACiC,OALoB,SAOA7B,YAAU+B,EAAUtC,GAPpB,cAOzBmK,EAPyB,OAQzBC,EAAgBnB,EAAYc,QAChC,SAACC,EAAKC,EAAMjG,GAAZ,mBAAC,eAA2BgG,GAA5B,kBAAkCC,EAAKT,OAAS,IAAIvN,IAAUkO,EAAiBnG,IAAQlC,aACvF,IAV6B,SAcNsF,EAAK5L,IAAI6O,WAAWjI,GAdd,cAczBkI,EAdyB,OAezBC,EAAcjB,EAASS,QAC3B,SAACC,EAAKC,GAAN,mBAAC,eAAoBD,GAArB,kBAA2BC,EAAKT,OAAS,IAAIvN,IAAUqO,GAAYxI,aACnE,IAjB6B,6CAoBnBsI,GAAkBG,IApBC,4CAAH,sDAuBjBC,EAAsB,uCAAG,WAAOpI,GAAP,uBAAA/F,EAAA,6DAC9B2D,EAAQuJ,EAAe3J,KAAI,SAACwJ,GAAD,MAAQ,CACvC9N,QAAS8N,EAAES,gBAAgBvK,IAC3BY,KAAM,WACNC,OAAQ,CAACiC,OAJyB,SAMb7B,YAAUkK,EAAazK,GANV,cAM9B0K,EAN8B,OAO9BC,EAAiBpB,EAAeQ,QACpC,SAACC,EAAKC,EAAMjG,GAAZ,mBAAC,eACIgG,GADL,kBAEGC,EAAKT,OAAS,IAAIvN,IAAUyO,EAAS1G,GAAO4G,OAAOhJ,MAAME,aAE5D,IAZkC,SAgBO2H,EAAmB3B,QAAQ4C,SAAS,IAAKtI,GAASuF,OAhBzD,uBAgBpBkD,EAhBoB,EAgB5BD,OAhB4B,6CAkBxBD,GAlBwB,IAkBR,EAAG,IAAI1O,IAAU4O,GAAkB/I,YAlB3B,4CAAH,sDAqBtBgJ,EAAuB,uCAAG,WAAO1I,GAAP,qBAAA/F,EAAA,6DAC/B2D,EAAQuJ,EAAe3J,KAAI,SAACwJ,GAAD,MAAQ,CACvC9N,QAAS8N,EAAES,gBAAgBvK,IAC3BY,KAAM,gBACNC,OAAQ,CAACiC,OAJ0B,SAMnB7B,YAAUkK,EAAazK,GANJ,cAM/BiI,EAN+B,OAO/B8C,EAAiBxB,EAAeQ,QACpC,SAACC,EAAKC,EAAMjG,GAAZ,mBAAC,eACIgG,GADL,kBAEGC,EAAKT,OAAS,IAAIvN,IAAUgM,EAAIjE,IAAQlC,aAE3C,IAZmC,SAgBT2H,EAAmB3B,QAAQkD,aAAa,IAAK5I,GAASuF,OAhB7C,cAgB/BsD,EAhB+B,oDAkBzBF,GAlByB,IAkBT,EAAG,IAAI9O,IAAUgP,GAAenJ,YAlBvB,2CAAH,sDCnE9BqB,EAA2B,CAAEjH,KAAK,YAAKgN,MAEhCgC,EAAa7H,YAAY,CACpCnD,KAAM,QACNiD,eACAG,SAAU,CACR6H,mBAAoB,SAAC7N,EAAOkG,GAC1B,IAAM4H,EAAwB5H,EAAOE,QACrCpG,EAAMpB,KAAOoB,EAAMpB,KAAK0D,KAAI,SAACqK,GAC3B,IAAMoB,EAAeD,EAAc1N,MAAK,SAAC4N,GAAD,OAAWA,EAAM9B,SAAWS,EAAKT,UACzE,OAAO,2BAAKS,GAASoB,OAGzBE,iBAAkB,SAACjO,EAAOkG,GACxB,IAAMzF,EAAWyF,EAAOE,QACxBpG,EAAMpB,KAAOoB,EAAMpB,KAAK0D,KAAI,SAACqK,GAC3B,IAAMuB,EAAezN,EAASL,MAAK,SAAC4N,GAAD,OAAWA,EAAM9B,SAAWS,EAAKT,UACpE,OAAO,2BAAKS,GAAZ,IAAkBlM,SAAUyN,QAGhCC,oBAAqB,SAACnO,EAAOkG,GAAY,IAAD,EACLA,EAAOE,QAAhCgI,EAD8B,EAC9BA,MAAO9M,EADuB,EACvBA,MAAO4K,EADgB,EAChBA,OAChBxF,EAAQ1G,EAAMpB,KAAKyP,WAAU,SAACvC,GAAD,OAAOA,EAAEI,SAAWA,KACvDlM,EAAMpB,KAAK8H,GAAX,2BAAyB1G,EAAMpB,KAAK8H,IAApC,IAA4CjG,SAAS,2BAAMT,EAAMpB,KAAK8H,GAAOjG,UAAzB,kBAAoC2N,EAAQ9M,U,EAMzBsM,EAAWjH,QAArDsH,G,EAApBJ,mB,EAAoBI,kBAAkBE,E,EAAAA,oBAmBxCG,EAA0B,SAACxJ,GAAD,8CAAa,WAAOrF,GAAP,uBAAAV,EAAA,sEACzBsN,EAAoBvH,GADK,cAC5C0H,EAD4C,gBAEfI,EAAkB9H,GAFH,cAE5CyJ,EAF4C,gBAGrBrB,EAAuBpI,GAHF,cAG5CuI,EAH4C,iBAIrBG,EAAwB1I,GAJH,QAI5C2I,EAJ4C,OAM5ChN,EAAWmL,IAAYtJ,KAAI,SAACqK,GAAD,MAAW,CAC1CT,OAAQS,EAAKT,OACb1L,UAAWgM,EAAWG,EAAKT,QAC3BsC,oBAAqBD,EAAqB5B,EAAKT,QAC/CvL,cAAe0M,EAAeV,EAAKT,QACnCyB,cAAeF,EAAed,EAAKT,YAGrCzM,EAASwO,EAAiBxN,IAdwB,4CAAb,uDAiB1BgO,EAAsB,SAACvC,EAAgBpH,GAAjB,8CAAqC,WAAOrF,GAAP,eAAAV,EAAA,sEAC7CsN,EAAoBvH,GADyB,OAChE0H,EADgE,OAEtE/M,EAAS0O,EAAoB,CAAEjC,SAAQkC,MAAO,YAAa9M,MAAOkL,EAAWN,MAFP,2CAArC,uDAKtBwC,EAAoB,SAACxC,EAAgBpH,GAAjB,8CAAqC,WAAOrF,GAAP,eAAAV,EAAA,sEACxC6N,EAAkB9H,GADsB,OAC9DgI,EAD8D,OAEpErN,EAAS0O,EAAoB,CAAEjC,SAAQkC,MAAO,sBAAuB9M,MAAOwL,EAAcZ,MAFtB,2CAArC,uDAKpByC,EAA0B,SAACzC,EAAgBpH,GAAjB,8CAAqC,WAAOrF,GAAP,eAAAV,EAAA,sEAC7CmO,EAAuBpI,GADsB,OACpEuI,EADoE,OAE1E5N,EAAS0O,EAAoB,CAAEjC,SAAQkC,MAAO,gBAAiB9M,MAAO+L,EAAenB,MAFX,2CAArC,uDAK1B0C,EAA0B,SAAC1C,EAAgBpH,GAAjB,8CAAqC,WAAOrF,GAAP,eAAAV,EAAA,sEAC7CyO,EAAwB1I,GADqB,OACpE2I,EADoE,OAE1EhO,EAAS0O,EAAoB,CAAEjC,SAAQkC,MAAO,gBAAiB9M,MAAOmM,EAAevB,MAFX,2CAArC,uDAKxB0B,MAAf,S,oDCjGA,oBAGM3N,EAAsB,CAC1B,CACEE,IAAK,EACL0O,KAAM,EACNC,SAAU,QACVrM,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENM,aAAa,EACba,YAAa,QACbjB,eAAgB,CACd,GAAI,6CACJ,GAAI,8CAENhB,iBAAkBC,IAAWC,IAC7BiB,mBAAoBiM,IAAU3D,MAEhC,CACEjL,IAAK,EACL0O,KAAM,EACNC,SAAU,OACVrM,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENM,aAAa,EACba,YAAa,OACbjB,eAAgB,CACd,GAAI,6CACJ,GAAI,8CAENhB,iBAAkBC,IAAWC,IAC7BiB,mBAAoBiM,IAAU3D,MAEhC,CACEjL,IAAK,EACL0O,KAAM,EACNC,SAAU,gBACVrM,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENmB,YAAa,QACbjB,eAAgB,CACd,GAAI,6CACJ,GAAI,8CAENhB,iBAAkBC,IAAWE,KAC7BgB,mBAAoBiM,IAAUhE,MAEhC,CACE5K,IAAK,EACL0O,KAAM,EACNC,SAAU,eACVrM,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENmB,YAAa,QACbjB,eAAgB,CACd,GAAI,6CACJ,GAAI,8CAENhB,iBAAkBC,IAAWC,IAC7BiB,mBAAoBiM,IAAU3D,MAEhC,CACEjL,IAAK,EACL0O,KAAM,EACNC,SAAU,cACVrM,YAAa,CACX,GAAI,6CACJ,GAAI,8CAENmB,YAAa,OACbjB,eAAgB,CACd,GAAI,6CACJ,GAAI,8CAENhB,iBAAkBC,IAAWC,IAC7BiB,mBAAoBiM,IAAU3D,OAKnBnL,O,k6FC7Ef,IAAM+O,EAAoB7H,YAAO8H,IAAP9H,CAAH,KAiBjB+H,GAPM/H,IAAOzD,IAAV,KAOGyD,IAAOzD,IAAV,MAkCMyL,EA3BK,WAClB,IAAMC,EAAkBxF,cAExB,OACE,cAACoF,EAAD,UACE,eAAC,IAAD,CAAUK,MAAO,CAACC,QAAQ,IAAIC,QAAQ,OAAOC,cAAc,SAASC,WAAW,UAA/E,UACE,cAACP,EAAD,UACA,cAAC,IAAD,CAASQ,KAAK,KAAML,MAAO,CAACM,UAAU,UAAtC,SACGP,EAAgB,MAAO,qBAG1B,cAAC,IAAD,CACEQ,WAAY,CACVC,WAAY,UACZC,WAAY,kBAEdC,QAAS,CACPC,OAAQ,MACRC,OAAQ,qBACRC,MAAO,e,mqCCnDnB,IAAMC,EAAoBhJ,IAAOiJ,QAAX,KAahBC,EAAYlJ,IAAOzD,IAAV,KAKT4M,EAAgBnJ,IAAOzD,IAAV,KAcb6M,EAAOpJ,IAAOzD,IAAV,KAYJ8M,EAAa,SAACC,GAClBC,OAAOC,SAAWF,GAwDLG,EAtDI,WACf,OACI,eAACT,EAAD,WACM,eAACG,EAAD,WACF,cAACC,EAAD,CAAMM,QAAS,WACXL,EAAW,2EADf,SAGE,qBAAKM,IAAI,SAASC,IAAI,GAAG1B,MAAO,CAACa,MAAM,OAAOF,OAAO,YAEvD,cAACO,EAAD,CAAMM,QAAS,WACXL,EAAW,0EADf,SAGE,qBAAKM,IAAI,SAASC,IAAI,GAAG1B,MAAO,CAACa,MAAM,OAAOF,OAAO,YAEvD,cAACO,EAAD,CAAMM,QAAS,WACXL,EAAW,sCADf,SAGE,qBAAKM,IAAI,SAASC,IAAI,GAAG1B,MAAO,CAACa,MAAM,OAAOF,OAAO,YAEvD,cAACO,EAAD,CAAMM,QAAS,WACXL,EAAW,6FADf,SAGE,qBAAKM,IAAI,SAASC,IAAI,GAAG1B,MAAO,CAACa,MAAM,OAAOF,OAAO,YAEvD,cAACO,EAAD,CAAMM,QAAS,WACXL,EAAW,8BADf,SAGE,qBAAKM,IAAI,UAAUC,IAAI,GAAG1B,MAAO,CAACa,MAAM,OAAOF,OAAO,YAExD,cAACO,EAAD,CAAMM,QAAS,WACXL,EAAW,6BADf,SAGE,qBAAKM,IAAI,SAASC,IAAI,GAAG1B,MAAO,CAACa,MAAM,OAAOF,OAAO,YAEvD,cAACO,EAAD,CAAMM,QAAS,WACXL,EAAW,6CADf,SAGE,qBAAKM,IAAI,SAASC,IAAI,GAAG1B,MAAO,CAACa,MAAM,OAAOF,OAAO,YAGvD,cAACO,EAAD,CAAMM,QAAS,WACXL,EAAW,uCADf,SAGE,qBAAKM,IAAI,SAASC,IAAI,GAAG1B,MAAO,CAACa,MAAM,OAAOF,OAAO,eAGvD,cAACK,EAAD,UACI,qBAAKS,IAAI,sDAAsDC,IAAI,GAAG1B,MAAO,CAACa,MAAM,OAAOF,OAAO,YAEtG,cAAC,EAAD,Q,iCClFGgB,MAVf,WAEI,OACI,cAACzJ,EAAA,EAAD,CAAM8H,MAAO,CAAEI,WAAY,UAA3B,SACI,qBAAKqB,IAAI,+EAA+EC,IAAI,mB,kXCHxG,IAkBeE,EAlBKC,YAAH,KAKY,qBAAG9J,MAAkB+J,OAAOC,c,QCd5CC,EAAK,CAAEC,KAAM,KAAMC,SAAU,WA8B7BC,EAAe,CAC1BH,EA5BkB,CAAEC,KAAM,QAASC,SAAU,4BAC3B,CAAED,KAAM,QAASC,SAAU,6B,0BCCzCE,EAAY,sBAcZC,EAAkB5J,IAAMtJ,cAAc,CAC1CmT,iBAAkBN,EAClBO,oBAAqB,aACrBC,mBAAoBR,EACpBS,sBAAuB,eAanBC,GATYC,SAAS/P,uTAAYgQ,6BACT,IAAIC,qBAAmB,CACnDC,MAAOlQ,uTAAYmQ,2BAOW,SAAC,GAAkB,IAAhBlK,EAAe,EAAfA,SAAe,EACAxJ,mBAAc2S,GADd,mBACzCM,EADyC,KACvBC,EADuB,OAEIlT,mBAAc2S,GAFlB,mBAEzCQ,EAFyC,KAErBC,EAFqB,OAGRpT,mBAAqB,IAHb,mBAGzCL,EAHyC,KAG3BC,EAH2B,KAWhDQ,qBAAU,WACR,IAAMuT,EAAiBC,aAAaC,QAAQd,GAC5C,GAAIY,EAAgB,CAClB,IAAMG,EATY,SAACH,GACrB,OAAOb,EAAa3F,QAAO,SAAC0F,GAC1B,OAAOA,EAASD,OAASe,KACxB,GAMkBI,CAAcJ,GACjCT,EAAoBY,QAEpBZ,EAAoBP,KAErB,IAEHvS,qBAAU,WACJ6S,IACFxS,QAAQC,IAAR,uCAA6CuS,EAAiBL,KAA9D,YACAoB,MAAM,UAAD,OAAWf,EAAiBL,KAA5B,UACFqB,MAAK,SAAAC,GAAC,OAAEA,EAAEC,UAEVF,MAAK,SAACG,GACDA,EAAuBlU,KAAK4C,OAAS,EACvClD,EAAgB,CAAC,UAEjBA,EAAgBwU,EAAuBlU,SAG1C+T,MAAK,kBAAMb,EAAsBH,MACjCoB,OAAM,SAACC,GACN7T,QAAQ8T,MAAM,SACd9T,QAAQ8T,MAAMD,GACd1U,EAAgB,CAAC,gBAGtB,CAACqT,EAAkBrT,IAOtB,OACE,cAACoT,EAAgBjJ,SAAjB,CACEnH,MAAO,CAAEqQ,mBAAkBC,oBAPF,SAACsB,GAC5BtB,EAAoBsB,GACpBZ,aAAaa,QAAQ1B,EAAWyB,EAAW5B,OAK6BO,qBAAoBC,yBAD5F,SAGE,cAAC,IAAoBrJ,SAArB,CAA8BnH,MAAO,CAAEjD,eAAcC,mBAArD,SAAyE4J,QCpFzEuJ,EAAY,UAEZ2B,EAAetL,IAAMtJ,cAAc,CAAE6U,OAAQ,KAAMC,YAAa,kBAAM,QAEtEC,EAAuB,SAAC,GAAkB,IAAhBrL,EAAe,EAAfA,SAAe,EACjBxJ,oBAAS,WACnC,IAAM8U,EAAoBlB,aAAaC,QAAQd,GAC/C,QAAO+B,GAAoBC,KAAKC,MAAMF,MAHK,mBACtCH,EADsC,KAC9BM,EAD8B,KAa7C,OACE,cAACP,EAAa3K,SAAd,CAAuBnH,MAAO,CAAE+R,SAAQC,YARtB,WAClBK,GAAU,SAACC,GAET,OADAtB,aAAaa,QAAQ1B,EAAWgC,KAAKI,WAAWD,KACxCA,OAKV,SACE,cAAC,IAAD,CAAiBxM,MAAOiM,EAASS,IAAOC,IAAxC,SAAgD7L,OCbvC8L,EANE,WAAO,IAAD,EACWtL,qBAAW0K,GAE3C,MAAO,CAAEC,OAHY,EACbA,OAESC,YAHI,EACLA,YAEclM,MADhBsB,qBAAWuL,OCiHZC,EArHa,CAC1B,CACEC,MAAO,OACPC,KAAM,kBACNC,KAAM,KAER,CACEF,MAAO,WACPC,KAAM,YACNE,MAAO,CACL,CACEH,MAAO,OACPE,KAAM,8FAER,CACEF,MAAO,YACPE,KAAM,oFASZ,CACEF,MAAO,gBACPC,KAAM,kBACNC,KAAM,UAOR,CACEF,MAAO,YACPC,KAAM,WACNC,KAAM,UAER,CACEF,MAAO,mBACPC,KAAM,WACNC,KAAM,YAER,CACEF,MAAO,SACPC,KAAM,cACNC,KACE,mHAEJ,CACEF,MAAO,MACPC,KAAM,WACNC,KAAM,iCAER,CACEF,MAAO,WACPC,KAAM,WACNE,MAAO,CACL,CACEH,MAAO,cACPE,KAAM,oFAMR,CACEF,MAAO,aACPE,KAAM,gDAER,CACEF,MAAO,gBACPE,KAAM,oDAQZ,CACEF,MAAO,OACPC,KAAM,kBACNE,MAAO,CAKL,CACEH,MAAO,OACPE,KAAM,uCCzDCE,EA5BF,SAACC,GAAW,IAAD,EACcC,cAA5B3P,EADc,EACdA,QAAS4P,EADK,EACLA,QAASC,EADJ,EACIA,MADJ,EAE4BjM,qBAAWgJ,GAArDC,EAFc,EAEdA,iBAAkBC,EAFJ,EAEIA,oBAFJ,EAGUoC,IAAxBX,EAHc,EAGdA,OAAQC,EAHM,EAGNA,YACVsB,EAAe9T,cACf+T,EAAgB3T,cAItB,OAFA/B,QAAQC,IAAIwV,EAAanQ,WAAY,cAGnC,cAAC,IAAD,aACEK,QAASA,EACTgQ,MAAOJ,EACPK,OAAQJ,EACRtB,OAAQA,EACRC,YAAaA,EACb0B,YAAarD,GAAoBA,EAAiBL,KAClD2D,MAAOzD,EACP0D,QAAStD,EACTgD,aAAcA,EAAanQ,WAC3BoQ,cAAeA,EAAcpQ,WAC7B0Q,MAAOjB,EACPkB,UAAU,oDACNZ,K,+IC3BV,IAAMa,GAAUlO,YAAOI,IAAPJ,CAAH,MAcEmO,GARc,WAC3B,OACE,cAACD,GAAD,UACE,cAAC,IAAD,OCEAE,GAAOC,gBAAK,kBAAM,6EAClBC,GAAQD,gBAAK,kBAAM,sEAInBE,GAAWF,gBAAK,kBAAM,kCAI5B7W,IAAUuV,OAAO,CACfyB,eAAgB,IAChBC,eAAgB,KAGlB,IAAMC,GAAgB,WAAO,IAAD,EACGpB,cAArB3P,EADkB,EAClBA,QAAS4P,EADS,EACTA,QASjB,OARA5V,qBAAU,YACHgG,GAAW4L,OAAO4B,aAAaC,QAAQ,kBAC1CmC,EAAQ,cAET,CAAC5P,EAAS4P,IAEblV,cAGE,eAAC,IAAD,WACE,cAAC,IAAD,IACA,cAACsW,EAAD,IACA,cAAC,EAAD,UACE,cAAC,WAAD,CAAU/M,SAAU,cAAC,GAAD,IAApB,SACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAOgN,KAAK,IAAIC,OAAK,EAArB,UACE,cAACT,GAAD,IACA,cAAC,EAAD,OAEF,cAAC,IAAD,CAAOQ,KAAK,SAAZ,SACE,cAACN,GAAD,MAEF,cAAC,IAAD,CAAOM,KAAK,SAAZ,SACE,cAACN,GAAD,CAAOQ,WAAS,MAElB,cAAC,IAAD,CAAOF,KAAK,WAAZ,SACE,cAACG,EAAD,MAsBF,cAAC,IAAD,CAAOC,UAAWT,gBASf5N,OAAMsO,KAAKP,I,mECtFpBQ,GAAevO,IAAMtJ,cAAc,GAEnC8X,GAAuB,SAAC,GAAkB,IAAhBpO,EAAe,EAAfA,SACxBqO,EAAgBC,iBAAO,GADgB,EAEnB9X,mBAAS,GAFU,mBAEtC+X,EAFsC,KAE/BC,EAF+B,KAiB7C,OAbA5X,qBAAU,WACR,IAAMgL,EAAOjM,eACPwK,EAAWC,YAAW,wBAAC,6BAAAvJ,EAAA,sEACD+K,EAAK5L,IAAIyY,iBADR,QACrBC,EADqB,UAEPL,EAAcM,UAChCN,EAAcM,QAAUD,EACxBF,EAASE,IAJgB,2CAM1B,KAEH,OAAO,kBAAMpO,cAAcH,MAC1B,IAEI,cAACgO,GAAa5N,SAAd,CAAuBnH,MAAOmV,EAA9B,SAAsCvO,K,uCClBhC4O,gBAAe,CAC5BC,UAAU9U,EACV+U,QAAS,CACP/W,MAAOgX,KACPvL,MAAOwL,QC8BIC,GA1Ba,SAAC,GAAkB,IAAhBjP,EAAe,EAAfA,SACvBkP,EAAS7Z,eACTyN,EAAUgH,SAAS/P,MACzB,OACE,cAAC,KAAD,CAAUoV,MAAOA,GAAjB,SACE,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,IAAD,CACErM,QAASA,EACTsM,WAAY,CACVC,cAAe,CAAEH,UACjBI,QAJJ,SAOE,cAAC,GAAD,UACE,cAAC3P,GAAA,EAAD,UACE,cAAC,IAAD,UAAgBK,iBCvBhCuP,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,UACE,cAAC,GAAD,QAGJC,SAASC,eAAe,U","file":"static/js/main.1a849e29.chunk.js","sourcesContent":["import Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\n\n/**\n * Provides a web3 instance using our own private provider httpProver\n */\nconst getWeb3 = () => {\n  const web3 = new Web3(httpProvider)\n  return web3\n}\nconst getContract = (abi: any, address: string, contractOptions?: ContractOptions) => {\n  const web3 = getWeb3()\n  return new web3.eth.Contract((abi as unknown) as AbiItem, address, contractOptions)\n}\n\nexport { getWeb3, getContract, httpProvider }\n","import React, { createContext } from 'react'\n\nexport interface TranslationState {\n  translations: Array<any>\n  setTranslations: React.Dispatch<React.SetStateAction<Array<any>>>\n}\n\nconst defaultTranslationState: TranslationState = {\n  translations: [],\n  setTranslations: (): void => undefined,\n}\n\nexport const TranslationsContext = createContext(defaultTranslationState as TranslationState)\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport axios from \"axios\"\n\n\n\nconst useGetBNBPriceData = () => {\n  const [data, setData] = useState<BigNumber>(new BigNumber(0))\n  const API_URL = \"https://api.pancakeswap.info/api/v2/tokens/0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\"\n\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const resp = await axios.get(API_URL);\n      // axios.get(API_URL).then((re)=>{\n      //   setCakePriceBusd(new BigNumber(re.data.data.price))\n      // });\n      console.log(resp.data.data.price,\"price\");\n\n      setData(new BigNumber(resp.data.data.price))\n    }\n\n    fetchData()\n  }, [])\n\n  return data\n}\n\nexport default useGetBNBPriceData","import BigNumber from 'bignumber.js'\nimport { useEffect, useMemo } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmsPublicDataAsync, fetchPoolsPublicDataAsync, fetchPoolsUserDataAsync } from './actions'\nimport { State, Farm, Pool } from './types'\nimport { QuoteToken } from '../config/constants/types'\nimport useGetBNBPriceData from './fetchBNBPrice'\n\nconst ZERO = new BigNumber(0)\n\nexport const useFetchPublicData = () => {\n  const dispatch = useDispatch()\n  const { slowRefresh } = useRefresh()\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync())\n    // dispatch(fetchPoolsPublicDataAsync())\n  }, [dispatch, slowRefresh])\n}\n\n// Farms\n\nexport const useFarms = (): Farm[] => {\n  const farms = useSelector((state: State) => state.farms.data)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\n  }\n}\n\n\n// Pools\n\nexport const usePools = (account): Pool[] => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const pools = useSelector((state: State) => state.pools.data)\n  return pools\n}\n\nexport const usePoolFromPid = (sousId): Pool => {\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\n  return pool\n}\n\n// Prices\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  // const pid = 2 // BUSD-BNB LP\n  // const farm = useFarmFromPid(pid)\n  // return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\n  const price = useGetBNBPriceData();\n  return price;\n\n}\n\n\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const pid = 0 // CAKE-BNB LP\n  const bnbPriceUSD = usePriceBnbBusd()\n  const farm = useFarmFromPid(pid)\n  return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO\n  // const pid = 0; // Muft-BUSD LP\n  // const farm = useFarmFromPid(pid);\n  // return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO;\n\n  // return ZERO\n}\n\nexport const usePriceMSwapBusd = (): BigNumber => {\n  const pid = 0 // CAKE-BNB LP\n  const bnbPriceUSD = usePriceBnbBusd()\n  const farm = useFarmFromPid(pid)\n  return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO\n  // const pid = 0; // Muft-BUSD LP\n  // const farm = useFarmFromPid(pid);\n  // return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO;\n\n  // return ZERO\n}\n\n\nexport const usePriceMuftBusd = (): BigNumber => {\n  const pid = 1 // CAKE-BNB LP\n  const bnbPriceUSD = usePriceBnbBusd()\n  const farm = useFarmFromPid(pid)\n  return farm.tokenPriceVsQuote ? bnbPriceUSD.times(farm.tokenPriceVsQuote) : ZERO\n  // const pid = 0; // Muft-BUSD LP\n  // const farm = useFarmFromPid(pid);\n  // return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO;\n\n  // return ZERO\n}\n\nexport const useTotalValue = (): BigNumber => {\n  const farms = useFarms();\n  const bnbPrice = usePriceBnbBusd();\n  const cakePrice = usePriceCakeBusd();\n  let value = new BigNumber(0);\n  for (let i = 0; i < farms.length; i++) {\n    const farm = farms[i]\n    if (farm.lpTotalInQuoteToken) {\n      let val;\n      if (farm.quoteTokenSymbol === QuoteToken.BNB) {\n        val = (bnbPrice.times(farm.lpTotalInQuoteToken));\n      } else if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\n        val = (cakePrice.times(farm.lpTotalInQuoteToken));\n      } else {\n        val = (farm.lpTotalInQuoteToken);\n      }\n      value = value.plus(val);\n    }\n  }\n  return value;\n}","import BigNumber from 'bignumber.js'\nimport erc20 from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport farmsConfig from 'config/constants/farms'\nimport { QuoteToken } from '../../config/constants/types'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nconst fetchFarms = async () => {\n\n  console.log(\"CHAIN_ID\",CHAIN_ID)\n  const data = await Promise.all(\n    farmsConfig.map(async (farmConfig) => {\n      const lpAdress = farmConfig.lpAddresses[CHAIN_ID]\n      const calls = [\n        // Balance of token in the LP contract\n        {\n          address: farmConfig.tokenAddresses[CHAIN_ID],\n          name: 'balanceOf',\n          params: [lpAdress],\n        },\n        // Balance of quote token on LP contract\n        {\n          address: farmConfig.quoteTokenAdresses[CHAIN_ID],\n          name: 'balanceOf',\n          params: [lpAdress],\n        },\n        // Balance of LP tokens in the master chef contract\n        {\n          address: farmConfig.isTokenOnly ? farmConfig.tokenAddresses[CHAIN_ID] : lpAdress,\n          name: 'balanceOf',\n          params: [getMasterChefAddress()],\n        },\n        // Total supply of LP tokens\n        {\n          address: lpAdress,\n          name: 'totalSupply',\n        },\n        // Token decimals\n        {\n          address: farmConfig.tokenAddresses[CHAIN_ID],\n          name: 'decimals',\n        },\n        // Quote token decimals\n        {\n          address: farmConfig.quoteTokenAdresses[CHAIN_ID],\n          name: 'decimals',\n        },\n      ]\n\n      const [\n        tokenBalanceLP,\n        quoteTokenBlanceLP,\n        lpTokenBalanceMC,\n        lpTotalSupply,\n        tokenDecimals,\n        quoteTokenDecimals\n      ] = await multicall(erc20, calls)\n\n      let tokenAmount;\n      let lpTotalInQuoteToken;\n      let tokenPriceVsQuote;\n      if(farmConfig.isTokenOnly){\n        tokenAmount = new BigNumber(lpTokenBalanceMC).div(new BigNumber(10).pow(tokenDecimals));\n        if(farmConfig.tokenSymbol === QuoteToken.BUSD && farmConfig.quoteTokenSymbol === QuoteToken.BUSD){\n          tokenPriceVsQuote = new BigNumber(1);\n        }else{\n          tokenPriceVsQuote = new BigNumber(quoteTokenBlanceLP).div(new BigNumber(tokenBalanceLP));\n        }\n        lpTotalInQuoteToken = tokenAmount.times(tokenPriceVsQuote);\n      }else{\n        // Ratio in % a LP tokens that are in staking, vs the total number in circulation\n        const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n        // Total value in staking in quote token value\n        lpTotalInQuoteToken = new BigNumber(quoteTokenBlanceLP)\n          .div(new BigNumber(10).pow(18))\n          .times(new BigNumber(2))\n          .times(lpTokenRatio)\n\n        // Amount of token in the LP that are considered staking (i.e amount of token * lp ratio)\n        tokenAmount = new BigNumber(tokenBalanceLP).div(new BigNumber(10).pow(tokenDecimals)).times(lpTokenRatio)\n        const quoteTokenAmount = new BigNumber(quoteTokenBlanceLP)\n          .div(new BigNumber(10).pow(quoteTokenDecimals))\n          .times(lpTokenRatio)\n\n        if(tokenAmount.comparedTo(0) > 0){\n          tokenPriceVsQuote = quoteTokenAmount.div(tokenAmount);\n        }else{\n          tokenPriceVsQuote = new BigNumber(quoteTokenBlanceLP).div(new BigNumber(tokenBalanceLP));\n        }\n      }\n\n      const [info, totalAllocPoint, MuftPerBlock] = await multicall(masterchefABI, [\n        {\n          address: getMasterChefAddress(),\n          name: 'poolInfo',\n          params: [farmConfig.pid],\n        },\n        {\n          address: getMasterChefAddress(),\n          name: 'totalAllocPoint',\n        },\n        {\n          address: getMasterChefAddress(),\n          name: 'mswapPerBlock',\n        },\n      ])\n\n      const allocPoint = new BigNumber(info.allocPoint._hex)\n      const poolWeight = allocPoint.div(new BigNumber(totalAllocPoint))\n\n      return {\n        ...farmConfig,\n        tokenAmount: tokenAmount.toJSON(),\n        // quoteTokenAmount: quoteTokenAmount,\n        lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n        tokenPriceVsQuote: tokenPriceVsQuote.toJSON(),\n        poolWeight: poolWeight.toNumber(),\n        multiplier: `${allocPoint.div(100).toString()}X`,\n        depositFeeBP: info.depositFeeBP,\n        MuftPerBlock: new BigNumber(MuftPerBlock).toNumber(),\n      }\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport farmsConfig from 'config/constants/farms'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nexport const fetchFarmUserAllowances = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = farm.isTokenOnly ? farm.tokenAddresses[CHAIN_ID] : farm.lpAddresses[CHAIN_ID]\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAdress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string) => {\n  const calls = farmsConfig.map((farm) => {\n    const lpContractAddress = farm.isTokenOnly ? farm.tokenAddresses[CHAIN_ID] : farm.lpAddresses[CHAIN_ID]\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAdress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string) => {\n  const masterChefAdress = getMasterChefAddress()\n\n  const calls = farmsConfig.map((farm) => {\n    return {\n      address: masterChefAdress,\n      name: 'pendingMSWAP',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport fetchFarms from './fetchFarms'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst initialState: FarmsState = { data: [...farmsConfig] }\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setFarmsPublicData: (state, action) => {\n      const liveFarmsData: Farm[] = action.payload\n      state.data = state.data.map((farm) => {\n        const liveFarmData = liveFarmsData.find((f) => f.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    },\n    setFarmUserData: (state, action) => {\n      const { arrayOfUserDataObjects } = action.payload\n      arrayOfUserDataObjects.forEach((userDataEl) => {\n        const { index } = userDataEl\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n    },\n  },\n})\n\n// Actions\nexport const { setFarmsPublicData, setFarmUserData } = farmsSlice.actions\n\n// Thunks\nexport const fetchFarmsPublicDataAsync = () => async (dispatch) => {\n  const farms = await fetchFarms()\n  dispatch(setFarmsPublicData(farms))\n}\nexport const fetchFarmUserDataAsync = (account) => async (dispatch) => {\n  const userFarmAllowances = await fetchFarmUserAllowances(account)\n  const userFarmTokenBalances = await fetchFarmUserTokenBalances(account)\n  const userStakedBalances = await fetchFarmUserStakedBalances(account)\n  const userFarmEarnings = await fetchFarmUserEarnings(account)\n\n  const arrayOfUserDataObjects = userFarmAllowances.map((farmAllowance, index) => {\n    return {\n      index,\n      allowance: userFarmAllowances[index],\n      tokenBalance: userFarmTokenBalances[index],\n      stakedBalance: userStakedBalances[index],\n      earnings: userFarmEarnings[index],\n    }\n  })\n\n  dispatch(setFarmUserData({ arrayOfUserDataObjects }))\n}\n\nexport default farmsSlice.reducer\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 1300px;\n  padding-left: 16px;\n  padding-right: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`\n\nexport default Container\n","import styled from 'styled-components'\nimport Container from './Container'\n\nconst Page = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nexport default Page\n","import random from 'lodash/random'\n\n// Array of available nodes to connect to\nconst nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  const randomIndex = random(0, nodes.length - 1)\n  return nodes[randomIndex]\n}\n\nexport default getNodeUrl\n","import React, { useState, useEffect } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setFast((prev) => prev + 1)\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setSlow((prev) => prev + 1)\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","export { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync } from './farms'\nexport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  updateUserAllowance,\n  updateUserBalance,\n  updateUserPendingReward,\n  updateUserStakedBalance,\n} from './pools'\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\n\nconst variableRegex = /%(.*?)%/\n\nconst replaceDynamicString = (foundTranslation: string, fallback: string) => {\n  const stringToReplace = variableRegex.exec(foundTranslation)[0]\n  // const indexToReplace = foundTranslation.split(' ').indexOf(stringToReplace)\n  const fallbackValueAtIndex = fallback.split(' ')[0]\n  return foundTranslation.replace(stringToReplace, fallbackValueAtIndex)\n}\n\nexport const getTranslation = (translations: Array<any>, translationId: number, fallback: string) => {\n  const foundTranslation = translations.find((translation) => {\n    return translation.data.stringId === translationId\n  })\n  if (foundTranslation) {\n    const translatedString = foundTranslation.data.text\n    const includesVariable = translatedString.includes('%')\n    if (includesVariable) {\n      return replaceDynamicString(translatedString, fallback)\n    }\n    return translatedString\n  }\n  return fallback\n}\n\n// TODO: Replace instances where this is called directly with the \"useI18n\" hook.\n// Using this directly can lead to errors because \"useContext\" is not preserved between renders\n// @see https://reactjs.org/docs/hooks-rules.html\nexport const TranslateString = (translationId: number, fallback: string) => {\n  const { translations } = useContext(TranslationsContext)\n  if (translations[0] === 'error') {\n    return fallback\n  }\n  if (translations.length > 0) {\n    return getTranslation(translations, translationId, fallback)\n  }\n  return fallback\n}\n","import { useContext } from 'react'\nimport { TranslationsContext } from '../contexts/Localisation/translationsContext'\nimport { getTranslation } from '../utils/translateTextHelpers'\n\nconst useI18n = () => {\n  const { translations } = useContext(TranslationsContext)\n\n  return (translationId: number, fallback: string) => {\n    if (translations[0] === 'error') {\n      return fallback\n    }\n    if (translations.length > 0) {\n      return getTranslation(translations, translationId, fallback)\n    }\n    return fallback\n  }\n}\n\nexport default useI18n\n","export type IfoStatus = 'coming_soon' | 'live' | 'finished'\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  subTitle?: string\n  description?: string\n  launchDate: string\n  launchTime: string\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  projectSiteUrl: string\n  currency: string\n  currencyAddress: string\n  tokenDecimals: number\n  releaseBlockNumber: number\n}\n\nexport enum QuoteToken {\n  'BNB' = 'BNB',\n  'CAKE' = 'CAKE',\n  'SYRUP' = 'SYRUP',\n  'BUSD' = 'BUSD',\n  'TWT' = 'TWT',\n  'UST' = 'UST',\n  'MUFT' = 'MUFT',\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n}\n\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  tokenSymbol: string\n  tokenAddresses: Address\n  quoteTokenSymbol: QuoteToken\n  quoteTokenAdresses: Address\n  multiplier?: string\n  isTokenOnly?: boolean\n  isCommunity?: boolean\n  risk: number\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  image?: string\n  tokenName: string\n  stakingTokenName: QuoteToken\n  stakingLimit?: number\n  stakingTokenAddress?: string\n  contractAddress: Address\n  poolCategory: PoolCategory\n  projectLink: string\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  tokenDecimals: number\n}\n\nexport type Nft = {\n  name: string\n  description: string\n  originalImage: string\n  previewImage: string\n  blurImage: string\n  sortOrder: number\n  bunnyId: number\n}\n","import { AbiItem } from 'web3-utils'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3 } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport { getMulticallAddress } from 'utils/addressHelpers'\n\ninterface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (exemple: balanceOf)\n  params?: any[] // Function params\n}\n\nconst multicall = async (abi: any[], calls: Call[]) => {\n  const web3 = getWeb3()\n  const multi = new web3.eth.Contract((MultiCallAbi as unknown) as AbiItem, getMulticallAddress())\n  const itf = new Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const { returnData } = await multi.methods.aggregate(calldata).call()\n  const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n  return res\n}\n\nexport default multicall\n","import addresses from 'config/constants/contracts'\n\nconst chainId = process.env.REACT_APP_CHAIN_ID\n\nexport const getCakeAddress = () => {\n  return addresses.cake[chainId]\n}\nexport const getMasterChefAddress = () => {\n  return addresses.masterChef[chainId]\n}\nexport const getMulticallAddress = () => {\n  return addresses.mulltiCall[chainId]\n}\nexport const getWbnbAddress = () => {\n  return addresses.wbnb[chainId]\n}\nexport const getLotteryAddress = () => {\n  return addresses.lottery[chainId]\n}\nexport const getLotteryTicketAddress = () => {\n  return addresses.lotteryNFT[chainId]\n}\n","export default {\n  cake: {\n    56: '0x9393d3C08956F245cdEE9ac9DD7214131Ae2bB8B',\n    97: '0xdA38540DcEf3Da8fA4906b8f11D49604d38628F1',\n  },\n  masterChef: {\n    56: '0x73fc13789927d31cd9DeBe54950ccc68C02047Df',\n    97: '0x6314C3c7d228c8857b0fE84E3cF4052458be1093',\n  },\n  wbnb: {\n    56: '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c',\n    97: '0xdA38540DcEf3Da8fA4906b8f11D49604d38628F1',\n  },\n  lottery: {\n    56: '',\n    97: '',\n  },\n  lotteryNFT: {\n    56: '',\n    97: '',\n  },\n  mulltiCall: {\n    56: '0x1ee38d535d541c55c9dae27b12edf090c608e6fb',\n    97: '0x67ADCB4dF3931b0C5Da724058ADC2174a9844412',\n  },\n  busd: {\n    56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n    97: '0xdA38540DcEf3Da8fA4906b8f11D49604d38628F1',\n  },\n}\n","import { PoolConfig, QuoteToken, PoolCategory } from './types'\n\nconst pools: PoolConfig[] = [\n  // {\n  //   sousId: 0,\n  //   tokenName: 'CAKE',\n  //   stakingTokenName: QuoteToken.CAKE,\n  //   stakingTokenAddress: '0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82',\n  //   contractAddress: {\n  //     97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\n  //     56: '0x73feaa1eE314F8c655E354234017bE2193C9E24E',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://pancakeswap.finance/',\n  //   harvest: true,\n  //   tokenPerBlock: '10',\n  //   sortOrder: 1,\n  //   isFinished: false,\n  //   tokenDecimals: 18,\n  // },\n  // {\n  //   sousId: 1,\n  //   tokenName: 'TWT',\n  //   stakingTokenName: QuoteToken.SYRUP,\n  //   stakingTokenAddress: '0x009cF7bC57584b7998236eff51b98A168DceA9B0',\n  //   contractAddress: {\n  //     97: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n  //     56: '0xAfd61Dc94f11A70Ae110dC0E0F2061Af5633061A',\n  //   },\n  //   poolCategory: PoolCategory.CORE,\n  //   projectLink: 'https://trustwallet.com/',\n  //   harvest: true,\n  //   tokenPerBlock: '20',\n  //   sortOrder: 999,\n  //   isFinished: true,\n  //   tokenDecimals: 18,\n  // },\n]\n\nexport default pools\n","import { AbiItem } from 'web3-utils'\nimport poolsConfig from 'config/constants/pools'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport { QuoteToken } from 'config/constants/types'\nimport multicall from 'utils/multicall'\nimport { getMasterChefAddress } from 'utils/addressHelpers'\nimport { getWeb3 } from 'utils/web3'\nimport BigNumber from 'bignumber.js'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingTokenName !== QuoteToken.BNB)\nconst bnbPools = poolsConfig.filter((p) => p.stakingTokenName === QuoteToken.BNB)\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\nconst web3 = getWeb3()\nconst masterChefContract = new web3.eth.Contract((masterChefABI as unknown) as AbiItem, getMasterChefAddress())\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: p.stakingTokenAddress,\n    name: 'allowance',\n    params: [account, p.contractAddress[CHAIN_ID]],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: p.stakingTokenAddress,\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await web3.eth.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: p.contractAddress[CHAIN_ID],\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.methods.userInfo('0', account).call()\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: p.contractAddress[CHAIN_ID],\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.methods.pendingMSWAP('0', account).call()\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward).toJSON() }\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport poolsConfig from 'config/constants/pools'\nimport { fetchPoolsBlockLimits, fetchPoolsTotalStatking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { PoolsState, Pool } from '../types'\n\nconst initialState: PoolsState = { data: [...poolsConfig] }\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n      state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n    },\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = () => async (dispatch) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStatking()\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    return {\n      ...blockLimit,\n      ...totalStaking,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsUserDataAsync = (account) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  const stakingTokenBalances = await fetchUserBalances(account)\n  const stakedBalances = await fetchUserStakeBalances(account)\n  const pendingRewards = await fetchUserPendingRewards(account)\n\n  const userData = poolsConfig.map((pool) => ({\n    sousId: pool.sousId,\n    allowance: allowances[pool.sousId],\n    stakingTokenBalance: stakingTokenBalances[pool.sousId],\n    stakedBalance: stakedBalances[pool.sousId],\n    pendingReward: pendingRewards[pool.sousId],\n  }))\n\n  dispatch(setPoolsUserData(userData))\n}\n\nexport const updateUserAllowance = (sousId: string, account: string) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n}\n\nexport const updateUserBalance = (sousId: string, account: string) => async (dispatch) => {\n  const tokenBalances = await fetchUserBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n}\n\nexport const updateUserStakedBalance = (sousId: string, account: string) => async (dispatch) => {\n  const stakedBalances = await fetchUserStakeBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n}\n\nexport const updateUserPendingReward = (sousId: string, account: string) => async (dispatch) => {\n  const pendingRewards = await fetchUserPendingRewards(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n}\n\nexport default PoolsSlice.reducer\n","import contracts from './contracts'\nimport { FarmConfig, QuoteToken } from './types'\n\nconst farms: FarmConfig[] = [\n  {\n    pid: 0,\n    risk: 5,\n    lpSymbol: 'MSWAP',\n    lpAddresses: {\n      97: '0xdA38540DcEf3Da8fA4906b8f11D49604d38628F1',\n      56: '0x90Ebf5bF9e0486893deBC85Dcf164d1dDC107e0c',\n    },\n    isTokenOnly: true,\n    tokenSymbol: 'MSWAP',\n    tokenAddresses: {\n      97: '0xdA38540DcEf3Da8fA4906b8f11D49604d38628F1',\n      56: '0x9393d3C08956F245cdEE9ac9DD7214131Ae2bB8B',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 1,\n    risk: 5,\n    lpSymbol: 'MUFT',\n    lpAddresses: {\n      97: '0xdA38540DcEf3Da8fA4906b8f11D49604d38628F1',\n      56: '0x8858cFb3f8C901381bd52F8aCf5bFB888dce421d',\n    },\n    isTokenOnly: true,\n    tokenSymbol: 'Muft',\n    tokenAddresses: {\n      97: '0xdA38540DcEf3Da8fA4906b8f11D49604d38628F1',\n      56: '0x1d4a26a9d980afc2287dca15eb896a26384bac7c',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 2,\n    risk: 5,\n    lpSymbol: 'MSWAP-MUFT LP',\n    lpAddresses: {\n      97: '0x382c7e4111d072e37180c95ec627f760b75d4455',\n      56: '0x0444457A8eb29e1Bdd13569c213F068b998f5660',\n    },\n    tokenSymbol: 'MSWAP',\n    tokenAddresses: {\n      97: '0x382c7e4111d072e37180c95ec627f760b75d4455',\n      56: '0x9393d3C08956F245cdEE9ac9DD7214131Ae2bB8B',\n    },\n    quoteTokenSymbol: QuoteToken.CAKE,\n    quoteTokenAdresses: contracts.cake,\n  },\n  {\n    pid: 3,\n    risk: 5,\n    lpSymbol: 'MSWAP-BNB LP',\n    lpAddresses: {\n      97: '0x382c7e4111d072e37180c95ec627f760b75d4455',\n      56: '0x90Ebf5bF9e0486893deBC85Dcf164d1dDC107e0c',\n    },\n    tokenSymbol: 'MSWAP',\n    tokenAddresses: {\n      97: '0x382c7e4111d072e37180c95ec627f760b75d4455',\n      56: '0x9393d3C08956F245cdEE9ac9DD7214131Ae2bB8B',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n  {\n    pid: 4,\n    risk: 5,\n    lpSymbol: 'MUFT-BNB LP',\n    lpAddresses: {\n      97: '0x382c7e4111d072e37180c95ec627f760b75d4455',\n      56: '0x8858cFb3f8C901381bd52F8aCf5bFB888dce421d',\n    },\n    tokenSymbol: 'MUFT',\n    tokenAddresses: {\n      97: '0x382c7e4111d072e37180c95ec627f760b75d4455',\n      56: '0x1d4a26a9d980afc2287dca15eb896a26384bac7c',\n    },\n    quoteTokenSymbol: QuoteToken.BNB,\n    quoteTokenAdresses: contracts.wbnb,\n  },\n\n]\n\nexport default farms\n","import React from 'react'\nimport { Card, CardBody, Heading, Text } from '@pancakeswap-libs/uikit'\nimport BigNumber from 'bignumber.js/bignumber'\nimport styled from 'styled-components'\nimport { Timeline } from 'react-twitter-widgets'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTotalSupply, useBurnedBalance } from 'hooks/useTokenBalance'\nimport useI18n from 'hooks/useI18n'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport CardValue from './CardValue'\nimport { useFarms } from '../../../state/hooks'\n\nconst StyledTwitterCard = styled(Card)`\n  margin-left: auto;\n  margin-right: auto;\n  width: 26rem;\n  padding: 0;\n  @media only screen and (max-width: 768px) {\n   width: 99%;\n  }\n`\n\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n  font-size: 14px;\n  justify-content: space-between;\n  margin-bottom: 8px;\n`\nconst Div = styled.div`\n  width: 100%;\n    height: 4rem;\n    background: rgb(199, 1, 1);\n    padding: 0.5rem  0 0 0;\n`\n\nconst TwitterCard = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledTwitterCard>\n      <CardBody style={{padding:\"0\",display:\"flex\",flexDirection:\"column\",alignItems:\"center\"}}>\n        <Div>\n        <Heading size=\"xl\"  style={{textAlign:\"center\"}}>\n          {TranslateString(10003, 'Announcements')}\n        </Heading>\n        </Div>\n        <Timeline\n          dataSource={{\n            sourceType: 'profile',\n            screenName: 'ManUtdFanToken'\n          }}\n          options={{\n            height: '400',\n            chrome: \"noheader, nofooter\",\n            width: \"90%\"\n          }}\n        />\n      </CardBody>\n    </StyledTwitterCard>\n  )\n}\n\nexport default TwitterCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport TwitterCard from './TwitterCard'\n\nconst StyledCustomPage  = styled.section`\n    background-image: url('/bg.png');\n    background-repeat: no-repeat;\n    background-size: 100% 100%;\n    background-color: #FFF;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 0 0 3rem  0;\n     @media only screen and (max-width: 998px) {\n        background-size: auto 100%;\n       }\n`\nconst MainImage = styled.div`\n    height: 25rem;\n    width: 20rem;\n    margin: 4rem 0 3rem 0;\n`\nconst IconContainer = styled.div`\n      width: 100%;\n    background-color: rgb(242, 242, 242);\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    height: 9rem;\n    @media only screen and (max-width: 768px) {\n      width: 100%;\n      display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(3rem, 1fr));\n    place-items: center;\n     }\n`\nconst Icon = styled.div`\n  width: 4rem;\n  height: 4rem;\n  cursor: pointer;\n  @media only screen and (max-width: 768px) {\n    \n    width: 2rem;\n  height: 2rem;\n   }\n`\n\n\nconst routeToURL = (url )=>{\n  window.location = url\n}\nconst CustomPage = () => {\n    return (\n        <StyledCustomPage>\n              <IconContainer>\n            <Icon onClick={()=>{\n                routeToURL(\"https://bscscan.com/address/0x9393d3C08956F245cdEE9ac9DD7214131Ae2bB8B\")\n            }} >\n              <img src=\"/1.png\" alt=\"\" style={{width:\"100%\",height:\"100%\"}} />\n            </Icon>\n            <Icon onClick={()=>{\n                routeToURL(\"https://poocoin.app/tokens/0x9393d3c08956f245cdee9ac9dd7214131ae2bb8b\")\n            }}>\n              <img src=\"/2.png\" alt=\"\" style={{width:\"100%\",height:\"100%\"}} />\n            </Icon>\n            <Icon onClick={()=>{\n                routeToURL(\"https://www.facebook.com/MUFTSWAP\")\n            }}>\n              <img src=\"/3.png\" alt=\"\" style={{width:\"100%\",height:\"100%\"}} />\n            </Icon>\n            <Icon onClick={()=>{\n                routeToURL(\"https://www.dextools.io/app/bsc/pair-explorer/0x8858cfb3f8c901381bd52f8acf5bfb888dce421d\")\n            }}>\n              <img src=\"/4.png\" alt=\"\" style={{width:\"100%\",height:\"100%\"}} />\n            </Icon>\n            <Icon onClick={()=>{\n                routeToURL(\"https://t.me/muftfantoken\")\n            }}>\n              <img src=\"/5.webp\" alt=\"\" style={{width:\"100%\",height:\"100%\"}} />\n            </Icon>\n            <Icon onClick={()=>{\n                routeToURL(\"https://medium.com/@MUFT\")\n            }}>\n              <img src=\"/6.png\" alt=\"\" style={{width:\"100%\",height:\"100%\"}} />\n            </Icon>\n            <Icon onClick={()=>{\n                routeToURL(\"https://www.reddit.com/r/ManUtdFanToken/\")\n            }}>\n              <img src=\"/7.png\" alt=\"\" style={{width:\"100%\",height:\"100%\"}} />\n            </Icon>\n            \n            <Icon onClick={()=>{\n                routeToURL(\"https://twitter.com/ManUtdFanToken\")\n            }}>\n              <img src=\"/8.png\" alt=\"\" style={{width:\"100%\",height:\"100%\"}} />\n            </Icon>\n        </IconContainer>\n            <MainImage>\n                <img src=\"https://muftswap.finance/images/ifos/large-logo.png\" alt=\"\" style={{width:\"100%\",height:\"100%\"}} />\n            </MainImage>\n            <TwitterCard />\n        </StyledCustomPage>\n    )\n}\n\nexport default CustomPage\n","import { ButtonMenu, ButtonMenuItem, Card, CardBody, Input, Text, CardHeader } from '@pancakeswap-libs/uikit';\nimport Page from 'components/layout/Page';\nimport React from 'react'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport Divider from 'views/Farms/components/Divider';\n\n\n\nfunction Exchnage() {\n    // const { url, isExact } = useRouteMatch()\n    return (\n        <Page style={{ alignItems: \"center\" }}>\n            <img src=\"https://i.pinimg.com/originals/5c/5d/66/5c5d6684644136c4b1442f1db30af6bf.gif\" alt=\"commingsoon\" />\n        </Page>\n    )\n\n}\n\nexport default Exchnage;\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@pancakeswap-libs/uikit'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Kanit', sans-serif;\n  }\n  body {\n    background: #4A0404; //${({ theme }) => theme.colors.background};\n    background-size: 100% 100%;\n    background-repeat: no-repeat;\n    background-attachment: fixed;\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n    \n  }\n`\n\nexport default GlobalStyle\n","export const EN = { code: 'en', language: 'English' }\nexport const AR = { code: 'ar', language: 'العربية' }\nexport const CA = { code: 'ca', language: 'Català' }\nexport const ZHCN = { code: 'zh-CN', language: '简体中文' }\nexport const ZHTW = { code: 'zh-TW', language: '繁體中文' }\nexport const CS = { code: 'cs', language: 'Čeština' }\nexport const DA = { code: 'da', language: 'Dansk' }\nexport const DE = { code: 'de', language: 'Deutsch' }\nexport const NL = { code: 'nl', language: 'Nederlands' }\nexport const FIL = { code: 'fil', language: 'Filipino' }\nexport const FI = { code: 'fi', language: 'Suomalainen' }\nexport const FR = { code: 'fr', language: 'Français' }\nexport const EL = { code: 'el', language: 'Ελληνικά' }\nexport const HI = { code: 'hi', language: 'हिंदी' }\nexport const HU = { code: 'hu', language: 'Magyar' }\nexport const ID = { code: 'id', language: 'Bahasa Indonesia' }\nexport const IT = { code: 'it', language: 'Italiano' }\nexport const JA = { code: 'ja', language: '日本語' }\nexport const KO = { code: 'ko', language: '한국어' }\nexport const PTBR = { code: 'pt-BR', language: 'Português' }\nexport const RO = { code: 'ro', language: 'Română' }\nexport const RU = { code: 'ru', language: 'Русский' }\nexport const SR = { code: 'sr', language: 'Српски' }\nexport const ESES = { code: 'es-ES', language: 'Español' }\nexport const SVSE = { code: 'sv-SE', language: 'Svenska' }\nexport const TA = { code: 'ta', language: 'தமிழ்' }\nexport const TR = { code: 'tr', language: 'Türkçe' }\nexport const UK = { code: 'uk', language: 'Українська' }\nexport const VI = { code: 'vi', language: 'Tiếng Việt' }\n\nexport const allLanguages = [\n  EN,\n  // AR,\n  // CA,\n  ZHCN,\n  ZHTW,\n  // CS,\n  // DA,\n  // DE,\n  // NL,\n  // FIL,\n  // FI,\n  // FR,\n  // EL,\n  // HI,\n  // HU,\n  // ID,\n  // IT,\n  // JA,\n  // KO,\n  // PTBR,\n  // RO,\n  // RU,\n  // SR,\n  // ESES,\n  // SVSE,\n  // TA,\n  // TR,\n  // UK,\n  // VI,\n]\n","import React, { useState, useEffect } from 'react'\nimport { StringTranslations } from '@crowdin/crowdin-api-client'\nimport { TranslationsContext } from 'contexts/Localisation/translationsContext'\nimport { allLanguages, EN } from 'config/localisation/languageCodes'\n\nconst CACHE_KEY = 'pancakeSwapLanguage'\n\nexport interface LangType {\n  code: string\n  language: string\n}\n\nexport interface LanguageState {\n  selectedLanguage: LangType\n  setSelectedLanguage: (langObject: LangType) => void\n  translatedLanguage: LangType\n  setTranslatedLanguage: React.Dispatch<React.SetStateAction<LangType>>\n}\n\nconst LanguageContext = React.createContext({\n  selectedLanguage: EN,\n  setSelectedLanguage: () => undefined,\n  translatedLanguage: EN,\n  setTranslatedLanguage: () => undefined,\n} as LanguageState)\n\nconst fileId = 8\nconst projectId = parseInt(process.env.REACT_APP_CROWDIN_PROJECTID)\nconst stringTranslationsApi = new StringTranslations({\n  token: process.env.REACT_APP_CROWDIN_APIKEY,\n})\n\nconst fetchTranslationsForSelectedLanguage = (selectedLanguage) => {\n  return stringTranslationsApi.listLanguageTranslations(projectId, selectedLanguage.code, undefined, fileId, 200)\n}\n\nconst LanguageContextProvider = ({ children }) => {\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(EN)\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(EN)\n  const [translations, setTranslations] = useState<Array<any>>([])\n\n  const getStoredLang = (storedLangCode: string) => {\n    return allLanguages.filter((language) => {\n      return language.code === storedLangCode\n    })[0]\n  }\n\n  useEffect(() => {\n    const storedLangCode = localStorage.getItem(CACHE_KEY)\n    if (storedLangCode) {\n      const storedLang = getStoredLang(storedLangCode)\n      setSelectedLanguage(storedLang)\n    } else {\n      setSelectedLanguage(EN)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (selectedLanguage) {\n      console.log(`import(\\`../../../public/i18n/${selectedLanguage.code}.json\\`)`);\n      fetch(`./i18n/${selectedLanguage.code}.json`)\n        .then(r=>r.json())\n      // fetchTranslationsForSelectedLanguage(selectedLanguage)\n        .then((translationApiResponse) => {\n          if (translationApiResponse.data.length < 1) {\n            setTranslations(['error'])\n          } else {\n            setTranslations(translationApiResponse.data)\n          }\n        })\n        .then(() => setTranslatedLanguage(selectedLanguage))\n        .catch((e) => {\n          console.error(\"ERROR\");\n          console.error(e);\n          setTranslations(['error'])\n        })\n    }\n  }, [selectedLanguage, setTranslations])\n\n  const handleLanguageSelect = (langObject: LangType) => {\n    setSelectedLanguage(langObject)\n    localStorage.setItem(CACHE_KEY, langObject.code)\n  }\n\n  return (\n    <LanguageContext.Provider\n      value={{ selectedLanguage, setSelectedLanguage: handleLanguageSelect, translatedLanguage, setTranslatedLanguage }}\n    >\n      <TranslationsContext.Provider value={{ translations, setTranslations }}>{children}</TranslationsContext.Provider>\n    </LanguageContext.Provider>\n  )\n}\n\nexport { LanguageContext, LanguageContextProvider }\n","import React, { useState } from 'react'\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\nimport { light, dark } from '@pancakeswap-libs/uikit'\n\nconst CACHE_KEY = 'IS_DARK'\n\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\n\nconst ThemeContextProvider = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\n  })\n\n  const toggleTheme = () => {\n    setIsDark((prevState) => {\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\n      return !prevState\n    })\n  }\n\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n\nexport { ThemeContext, ThemeContextProvider }\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeCopntext } from 'styled-components'\nimport { ThemeContext } from 'contexts/ThemeContext'\n\nconst useTheme = () => {\n  const { isDark, toggleTheme } = useContext(ThemeContext)\n  const theme = useContext(StyledThemeCopntext)\n  return { isDark, toggleTheme, theme }\n}\n\nexport default useTheme\n","import { MenuEntry } from '@pancakeswap-libs/uikit'\n\nconst config: MenuEntry[] = [\n  {\n    label: 'Home',\n    icon: 'HomeUpdatedIcon',\n    href: '/',\n  },\n  {\n    label: 'Exchange',\n    icon: 'TradeIcon',\n    items: [\n      {\n        label: 'Swap',\n        href: 'https://pancakeswap.finance/swap?outputCurrency=0x9393d3c08956f245cdee9ac9dd7214131ae2bb8b'\n      },\n      {\n        label: 'Liquidity',\n        href: 'https://pancakeswap.finance/add/BNB/0x9393d3C08956F245cdEE9ac9DD7214131Ae2bB8B'\n      },\n    ],\n  },\n  // {\n  //   label: 'Red Pools',\n  //   icon: 'PoolpdatedIcon',\n  //   href: '/farms',\n  // },\n  {\n    label: 'Devil`s Farms',\n    icon: 'FarmUpdatedIcon',\n    href: '/farms',\n  },\n  // {\n  //   label: 'Pools',\n  //   icon: 'PoolIcon',\n  //   href: '/pools',\n  // },\n  {\n    label: 'Red Pools',\n    icon: 'MoreIcon',\n    href: '/pools',\n  },\n  {\n    label: 'SNFT Marketplace',\n    icon: 'HomeIcon',\n    href: '/comming',\n  },\n  {\n    label: 'Audits',\n    icon: 'LotteryIcon',\n    href:\n      'https://github.com/solidproof/smart-contract-audits/blob/main/SmartContract_Audit_Solidproof_ManUtdFantoken.pdf',\n  },\n  {\n    label: 'ILO',\n    icon: 'MoonIcon',\n    href: 'https://ilo.muftswap.finance/',\n  },\n  {\n    label: 'Listings',\n    icon: 'MoreIcon',\n    items: [\n      {\n        label: 'PancakeSwap',\n        href: 'https://pancakeswap.finance/info/pool/0x90ebf5bf9e0486893debc85dcf164d1ddc107e0c', // 'https://pancakeswap.info/token/0xF952Fc3ca7325Cc27D15885d37117676d25BfdA6',\n      },\n      // {\n      //   label: 'CoinGecko',\n      //   href: '/comming', // 'https://www.coingecko.com/en/coins/goose-finance',\n      // },\n      {\n        label: 'CoinMooner',\n        href: 'https://coinmooner.com/coin/6924%F0%9F%9A%80',\n      },\n      {\n        label: 'CoinMarketCap',\n        href: 'https://coinmarketcap.com/currencies/muftswap/', // 'https://coinmarketcap.com/currencies/goose-finance/',\n      },\n      // {\n      //   label: 'AstroTools',\n      //   href: '', // 'https://app.astrotools.io/pancake-pair-explorer/0x19e7cbecdd23a16dfa5573df54d98f7caae03019',\n      // },\n    ],\n  },\n  {\n    label: 'More',\n    icon: 'MoreUpdatedIcon',\n    items: [\n      // {\n      //   label: 'Github',\n      //   href:  '', // 'https://github.com/goosedefi/',\n      // },\n      {\n        label: 'Docs',\n        href: 'https://docs.manutdfantoken.app/', // 'https://goosedefi.gitbook.io/goose-finance/',\n      },\n      // {\n      //   label: 'Blog',\n      //   href: '', //  'https://goosefinance.medium.com/',\n      // },\n    ],\n  },\n  // {\n  //   label: 'Partnerships/IFO',\n  //   icon: 'GooseIcon',\n  //   href: 'https://docs.google.com/forms/d/e/1FAIpQLSe7ycrw8Dq4C5Vjc9WNlRtTxEhFDB1Ny6jlAByZ2Y6qBo7SKg/viewform?usp=sf_link',\n  // },\n  // {\n  //   label: 'Audit by Hacken',\n  //   icon: 'AuditIcon',\n  //   href: 'https://www.goosedefi.com/files/hackenAudit.pdf',\n  // },\n  // {\n  //   label: 'Audit by CertiK',\n  //   icon: 'AuditIcon',\n  //   href: 'https://certik.org/projects/goose-finance',\n  // },\n]\n\nexport default config\n","import React, { useContext } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { allLanguages } from 'config/localisation/languageCodes'\nimport { LanguageContext } from 'contexts/Localisation/languageContext'\nimport useTheme from 'hooks/useTheme'\nimport { usePriceMuftBusd, usePriceCakeBusd } from 'state/hooks'\nimport { Menu as UikitMenu } from '@pancakeswap-libs/uikit'\nimport config from './config'\n\nconst Menu = (props) => {\n  const { account, connect, reset } = useWallet()\n  const { selectedLanguage, setSelectedLanguage } = useContext(LanguageContext)\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n  const cake2PriceUsd = usePriceMuftBusd()\n\n  console.log(cakePriceUsd.toNumber(), 'cake2Price')\n\n  return (\n    <UikitMenu\n      account={account}\n      login={connect}\n      logout={reset}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={selectedLanguage && selectedLanguage.code}\n      langs={allLanguages}\n      setLang={setSelectedLanguage}\n      cakePriceUsd={cakePriceUsd.toNumber()}\n      cake2PriceUsd={cake2PriceUsd.toNumber()}\n      links={config}\n      priceLink=\"https://www.coingecko.com/en/coins/goose-finance\"\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Spinner } from '@pancakeswap-libs/uikit'\nimport Page from './layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <Spinner />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import React, { useEffect, Suspense, lazy } from 'react'\nimport Gallery from 'views/Home/components/Gallery'\nimport CustomPage from 'views/Home/components/CustomPage'\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport Exchange from 'views/Exchange'\nimport { ResetCSS } from '@pancakeswap-libs/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useFetchPublicData } from 'state/hooks'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport PageLoader from './components/PageLoader'\nimport NftGlobalNotification from './views/Nft/components/NftGlobalNotification'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page'\nconst Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\n// const Lottery = lazy(() => import('./views/Lottery'))\n// const Pools = lazy(() => import('./views/Pools'))\n// const Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\n// const Nft = lazy(() => import('./views/Nft'))\n\n// This config is required for number formating\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  const { account, connect } = useWallet()\n  useEffect(() => {\n    if (!account && window.localStorage.getItem('accountStatus')) {\n      connect('injected')\n    }\n  }, [account, connect])\n\n  useFetchPublicData()\n\n  return (\n    <Router>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <Suspense fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n              <CustomPage />\n            </Route>\n            <Route path=\"/farms\">\n              <Farms />\n            </Route>\n            <Route path=\"/pools\">\n              <Farms tokenMode />\n            </Route>\n            <Route path=\"/comming\">\n              <Exchange />\n            </Route>\n            {/* <Route path=\"/pools\"> */}\n            {/*  <Pools /> */}\n            {/* </Route> */}\n            {/* <Route path=\"/lottery\"> */}\n            {/*  <Lottery /> */}\n            {/* </Route> */}\n            {/* <Route path=\"/ifo\"> */}\n            {/*  <Ifos /> */}\n            {/* </Route> */}\n            {/* <Route path=\"/nft\"> */}\n            {/*  <Nft /> */}\n            {/* </Route> */}\n            {/* Redirect */}\n            {/* <Route path=\"/staking\"> */}\n            {/*  <Redirect to=\"/pools\" /> */}\n            {/* </Route> */}\n            {/* <Route path=\"/syrup\"> */}\n            {/*  <Redirect to=\"/pools\" /> */}\n            {/* </Route> */}\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </Suspense>\n      </Menu>\n      {/* <NftGlobalNotification /> */}\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import React, { useState, useEffect, useRef } from 'react'\nimport { getWeb3 } from 'utils/web3'\n\nconst BlockContext = React.createContext(0)\n\nconst BlockContextProvider = ({ children }) => {\n  const previousBlock = useRef(0)\n  const [block, setBlock] = useState(0)\n\n  useEffect(() => {\n    const web3 = getWeb3()\n    const interval = setInterval(async () => {\n      const blockNumber = await web3.eth.getBlockNumber()\n      if (blockNumber !== previousBlock.current) {\n        previousBlock.current = blockNumber\n        setBlock(blockNumber)\n      }\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  return <BlockContext.Provider value={block}>{children}</BlockContext.Provider>\n}\n\nexport { BlockContext, BlockContextProvider }\n","import { configureStore } from '@reduxjs/toolkit'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\n\nexport default configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    farms: farmsReducer,\n    pools: poolsReducer,\n  },\n})\n","import React from 'react'\nimport { ModalProvider } from '@pancakeswap-libs/uikit'\n// import bsc, { UseWalletProvider } from '@binance-chain/bsc-use-wallet'\nimport * as bsc from '@binance-chain/bsc-use-wallet'\nimport { Provider } from 'react-redux'\nimport getRpcUrl from 'utils/getRpcUrl'\nimport { LanguageContextProvider } from 'contexts/Localisation/languageContext'\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\nimport { BlockContextProvider } from 'contexts/BlockContext'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport store from 'state'\n\nconst Providers: React.FC = ({ children }) => {\n  const rpcUrl = getRpcUrl()\n  const chainId = parseInt(process.env.REACT_APP_CHAIN_ID);\n  return (\n    <Provider store={store}>\n      <ThemeContextProvider>\n        <LanguageContextProvider>\n          <bsc.UseWalletProvider\n            chainId={chainId}\n            connectors={{\n              walletconnect: { rpcUrl },\n              bsc,\n            }}\n          >\n            <BlockContextProvider>\n              <RefreshContextProvider>\n                <ModalProvider>{children}</ModalProvider>\n              </RefreshContextProvider>\n            </BlockContextProvider>\n          </bsc.UseWalletProvider>\n        </LanguageContextProvider>\n      </ThemeContextProvider>\n    </Provider>\n  )\n}\n\nexport default Providers\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport Providers from './Providers'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Providers>\n      <App />\n    </Providers>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}